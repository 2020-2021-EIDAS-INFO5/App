application {
  config {
    baseName polySign,
    applicationType monolith,
    packageName com.polytech.polysign,
    languages [fr, en],
    nativeLanguage fr,
    authenticationType oauth2,
    prodDatabaseType mysql,
    clientFramework angular
  }
    entities * 
    service * with serviceClass
    paginate UserEntity with pagination 
    paginate Organization with pagination 
    paginate SignatureProcess with pagination 
    paginate SignOrder with pagination 
    paginate SignedFile with pagination 
    paginate Authorit with pagination
}

entity UserEntity{
	firstname String required
	lastname String required
    email String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/)
    phone String required maxlength(15)  
}


entity Organization{
    name String required
    streetAddress String required
	postalCode String required
	city String required
    country String required
    vatNumber String required
}



entity Authorit{
	hasRole Role required
}

enum Role{
	ADMIN_ORGANIZATION, USER_ORGANIZATION, SIGNER
} 

entity SignatureProcess {
	title String required
	emissionDate Instant required
	expirationDate Instant required
    status Status required 
    orderedSigning Boolean required
}


entity SignedFile {
    filename String required
    fileBytes Blob
    signingDate Instant required
    size Integer 
    sha256 String 
}

enum Status {
COMPLETED, PENDING, CANCELLED
}


entity SignOrder {
    rank Integer 
    signed Boolean
}

relationship OneToOne {
    UserEntity{user(firstName)} to User
    SignOrder{file(filename)} to SignedFile 
    SignatureProcess{finalFile(filename)} to SignedFile 
}



relationship OneToMany {
	UserEntity{signature(title)} to SignatureProcess{creator},
    Organization to Authorit{organization(name)},
    UserEntity{order} to SignOrder{signer(firstname)},
    SignatureProcess{signOrder} to SignOrder{signature(title)}
    UserEntity{authority(hasRole)} to Authorit{user(firstname)}
}
